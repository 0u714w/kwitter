{"ast":null,"code":"import _toConsumableArray from \"/Users/douglassenas/kwitter/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/douglassenas/kwitter/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN, REGISTER, NEW_POST, LIKE, DELETE_MESSAGE, GET_MESSAGE_ID, GET_MESSAGES, GET_LOGOUT, GET_USER, DELETE_USER, UNLIKE, PATCH_PASSWORD, PATCH_ABOUT } from './types';\nvar initialState = {\n  messages: [],\n  profile: {\n    username: null,\n    password: null,\n    token: null,\n    id: null,\n    success: null\n  },\n  users: [],\n  logout: {\n    success: false,\n    message: ''\n  },\n  likes: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN:\n      return _objectSpread({}, state, {\n        profile: {\n          id: action.data.id,\n          success: action.data.success,\n          token: action.data.token,\n          username: action.username,\n          password: action.password\n        }\n      });\n\n    case GET_MESSAGES:\n      return _objectSpread({}, state, {\n        messages: action.messages,\n        likes: action.userLikeMessageId\n      });\n\n    case REGISTER:\n      return _objectSpread({}, state, {\n        displayName: action.displayName,\n        username: action.username,\n        password: action.password\n      });\n\n    case NEW_POST:\n      return _objectSpread({}, state, {\n        message: action\n      });\n\n    case LIKE:\n      return _objectSpread({}, state, {\n        messageId: action.messageId,\n        likes: _toConsumableArray(state.likes).concat([action.messageId])\n      });\n\n    case DELETE_MESSAGE:\n      return _objectSpread({}, state);\n\n    case GET_MESSAGE_ID:\n      return _objectSpread({}, state, {\n        likes: {\n          liked: action.message\n        }\n      });\n\n    case GET_LOGOUT:\n      return _objectSpread({}, state, {\n        logout: {\n          success: action.success,\n          message: action.message\n        },\n        profile: {\n          username: null,\n          password: null,\n          token: null,\n          id: null,\n          success: null\n        },\n        likes: []\n      });\n\n    case GET_USER:\n      return _objectSpread({}, state, {\n        users: action.users\n      });\n\n    case DELETE_USER:\n      return _objectSpread({}, state);\n\n    case UNLIKE:\n      return _objectSpread({}, state, {\n        likes: state.likes.filter(function (messageId) {\n          return messageId !== action.messageId;\n        })\n      });\n\n    case PATCH_PASSWORD:\n      return _objectSpread({}, state);\n\n    case PATCH_ABOUT:\n      return _objectSpread({}, state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/douglassenas/kwitter/src/components/reducers.js"],"names":["LOGIN","REGISTER","NEW_POST","LIKE","DELETE_MESSAGE","GET_MESSAGE_ID","GET_MESSAGES","GET_LOGOUT","GET_USER","DELETE_USER","UNLIKE","PATCH_PASSWORD","PATCH_ABOUT","initialState","messages","profile","username","password","token","id","success","users","logout","message","likes","state","action","type","data","userLikeMessageId","displayName","messageId","liked","filter"],"mappings":"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","sourcesContent":["import { LOGIN, REGISTER, NEW_POST, LIKE, DELETE_MESSAGE, GET_MESSAGE_ID, GET_MESSAGES, GET_LOGOUT, GET_USER, DELETE_USER, UNLIKE, PATCH_PASSWORD, PATCH_ABOUT } from './types'\n\n\n\nconst initialState = {\n    messages: [],\n    profile: { username: null, password: null, token: null, id: null, success: null },\n    users: [],\n    logout: { success: false, message: '' },\n    likes: []\n}\n\nexport default function (state = initialState, action) {\n\n    switch (action.type) {\n        case LOGIN:\n\n            return {\n                ...state,\n                profile: {\n                    id: action.data.id,\n                    success: action.data.success,\n                    token: action.data.token,\n                    username: action.username,\n                    password: action.password,\n                }\n            }\n\n        case GET_MESSAGES:\n            return {\n                ...state,\n                messages: action.messages,\n                likes: action.userLikeMessageId\n            }\n\n        case REGISTER:\n            return {\n                ...state,\n\n                displayName: action.displayName,\n                username: action.username,\n                password: action.password\n\n            }\n\n        case NEW_POST:\n            return {\n                ...state,\n                message: action\n            }\n\n        case LIKE:\n            return {\n                ...state,\n                messageId: action.messageId,\n                likes: [...state.likes, action.messageId]\n            }\n\n        case DELETE_MESSAGE:\n            return { ...state }\n\n\n        case GET_MESSAGE_ID:\n            return {\n                ...state,\n                likes: {\n                    liked: action.message\n                }\n            };\n\n        case GET_LOGOUT:\n            return {\n                ...state,\n                logout: {\n                    success: action.success,\n                    message: action.message\n                },\n                profile: {\n                    username: null,\n                    password: null,\n                    token: null,\n                    id: null,\n                    success: null\n                },\n                likes: []\n            }\n        case GET_USER:\n            return {\n                ...state,\n                users: action.users\n\n            }\n\n        case DELETE_USER:\n            return {\n                ...state,\n            }\n\n        case UNLIKE:\n            return {\n                ...state,\n                likes: state.likes.filter(messageId => messageId !== action.messageId)\n            }\n        case PATCH_PASSWORD:\n\n            return {\n                ...state,\n\n            }\n        case PATCH_ABOUT:\n\n            return {\n                ...state,\n\n            }\n\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}